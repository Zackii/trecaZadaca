package hr.fer.zemris.optjava.dz3.functions;

import hr.fer.zemris.optjava.dz3.utilities.EquationsReader;

import static java.lang.Math.pow;
import static java.lang.Math.cos;
import static java.lang.Math.exp;

public class Function1 implements IFunction {

	private static final int NUM_OF_VARIABLES = 20;
	private static final int NUM_OF_LINES = 20;
	private static final int VALUE_INDEX = 5;

	private double[][] x;

	public Function1(String filePath) {
		EquationsReader reader = new EquationsReader(filePath, NUM_OF_LINES, NUM_OF_VARIABLES);
		x = reader.getCoeffs();
	}

	@Override
	public double valueAt(double[] coeffs) {
		double squaredDiffsSum = 0;

		for (int i = 0; i < NUM_OF_LINES; i++) {
			squaredDiffsSum += pow(valueOfFunction(x[i], coeffs) - x[i][VALUE_INDEX], 2);
		}

		return squaredDiffsSum;
	}

	private double valueOfFunction(double[] x, double[] c) {
		return c[0] * x[0] + c[1] * x[0] * x[0] * x[0] * x[1] + c[2] * exp(c[3] * x[2]) * (1 + cos(c[4] * x[3]))
				+ c[5] * x[3] * x[4] * x[4];
	}

}
